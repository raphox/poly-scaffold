import React from "react";

import Link from "next/link";
import { useRouter } from 'next/router';
import { useParams, useSearchParams } from "next/navigation";
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";

import { api } from "@/services";
import <%= resourceNames.classify %><% if (isTypescript) { %>, { Props as <%= resourceNames.classify %>Props }<% } %> from "@/components/<%= resource %>";

export default function <%= resourceNames.classify %>ShowPage() {
  const router = useRouter();
  const params = useParams();
  const searchParams = useSearchParams();
  const queryClient = useQueryClient();
  const notice = searchParams.get("notice");
  const <%= resource %>Id = params?.id;

  const { isPending: isDeleting, mutate } = useMutation({
    mutationFn: (data<% if (isTypescript) { %>: <%= resourceNames.classify %>Props<% } %>) => api.delete(`/<%= resourceNames.plural %>/${<%= resourceNames.camelize %>Id}`, data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["<%= resourceNames.plural %>"] });
      router.replace({
        pathname: "/<%= resourceNames.plural %>",
        query: { notice: "Removed with success." },
      });
    },
  });

  const { isPending, error, data } = useQuery<% if (isTypescript) { %><<%= resourceNames.classify %>Props><% } %>({
    queryFn: () => api.get(`/<%= resourceNames.plural %>/${<%= resourceNames.camelize %>Id}`).then((res) => res.data),
    queryKey: ["<%= resourceNames.plural %>", <%= resource %>Id],
    enabled: !!<%= resource %>Id,
  });

  if (isPending) {
    return "Loading...";
  } else if (error) {
    return "An error has occurred: " + (error<% if (isTypescript) { %> as Error<% } %>).message;
  }

  return (
    <>
      {notice && <p style={{ color: "green" }}>{notice}</p>}

      <<%= resourceNames.classify %> {...data} />

      <div>
        <Link href={`/<%= resourceNames.plural %>/${<%= resourceNames.camelize %>Id}/edit`}>Edit this <%= resource %></Link>
        {" | "}
        <Link href="/<%= resourceNames.plural %>">Back to <%= resourceNames.plural %></Link>{" "}
        <button disabled={isDeleting} onClick={() => mutate(<%= resource %>Id)}>
          Destroy this <%= resource %>
        </button>
      </div>
    </>
  );
}
