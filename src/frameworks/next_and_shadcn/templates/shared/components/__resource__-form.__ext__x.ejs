import React from "react";
import { useFormContext } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";

import {
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";

const schema = z.object({
  <%_ attributes.forEach(function({ name, type }) { _%>
  <%- name %>: z.<%= mapZodType(type) %>(),
  <%_ }) _%>
});

<% if (isTypescript) { %>
type FormData = z.infer<typeof schema>;
<% } %>

export const resolver = zodResolver(schema);

export default function <%= resourceNames.classify %>Form() {
  const { control } = useFormContext<FormData>();

  return (
    <>
    <%_ attributes.forEach(function({ name, type }) { _%>
      <FormField
        control={control}
        name="<%= name %>"
        render={({ field }) => (
          <FormItem>
            <FormLabel><%= titleize(name) %>:</FormLabel>
            <FormControl>
              <Input type="<%= mapHtmlType(type) %>" {...field} />
            </FormControl>
            <FormMessage />
          </FormItem>
        )}
      />
    <%_ }) _%>
    </>
  );
}
