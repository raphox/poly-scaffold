<% if (isAppRouter) { %>"use client";<% } _%>

import React, { ReactNode } from "react";
import Link from "next/link";
<% if (isAppRouter) { _%>
import { useRouter } from "next/navigation";
<% } else { _%>
import { useRouter } from "next/router";
<% } _%>
import { useMutation, useQueryClient } from "@tanstack/react-query";

import { api } from "@/services";
import { FormProvider } from "@/providers";
import { Button } from "@/components/ui/button";
import Layout from "@/components/layout";
<% if (isTypescript) { %>import { Props as <%= resourceNames.classify %>Props } from "@/components/<%= resource %>";<% } %>
import <%= resourceNames.classify %>Form, { resolver } from "@/components/<%= resource %>-form";

export default function <%= resourceNames.classify %>NewPage() {
  const router = useRouter();
  const queryClient = useQueryClient();

  const { isPending: isCreating, mutateAsync } = useMutation({
    mutationFn: (data<% if (isTypescript) { %>: <%= resourceNames.classify %>Props<% } %>) => api.post("/<%= resources %>", data),
    onSuccess: ({ data }) => {
      const query = new URLSearchParams({ notice: "Created with success." });

      queryClient.invalidateQueries({ queryKey: ["<%= resources %>"] });
      router.push(`/posts?${query.toString()}`);
    },
  });

  return (
    <div className="prose mx-auto w-full lg:max-w-5xl">
      <h1>New <%= resource %></h1>

      <FormProvider
        resolver={resolver}
        values={{
          <%_ attributes.forEach(function({ name, type }) { _%>
          <%= name %>: "",
          <%_ }) _%>
        }}
        onSubmit={mutateAsync}
      >
        <<%= resourceNames.classify %>Form />

        <div className="flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2">
          <Link href="/<%= resources %>">
            <Button variant="link">Back to <%= resources %></Button>
          </Link>
          <Button disabled={isCreating} type="submit">
            Create
          </Button>
        </div>
      </FormProvider>
    </div>
  );
}

<%= resourceNames.classify %>NewPage.getLayout = function getLayout(yeild: ReactNode) {
  return <Layout>{yeild}</Layout>;
};
